$(function() {
    "use strict";
    $(function() {
        $(".preloader").fadeOut();
    }), jQuery(document).on("click", ".mega-dropdown", function(e) {
        e.stopPropagation();
    });
    var set = function() {
        (window.innerWidth > 0 ? window.innerWidth : this.screen.width) < 1170 ? ($("body").addClass("mini-sidebar"),
            $(".navbar-brand span").hide(), $(".sidebartoggler i").addClass("ti-menu")) : ($("body").removeClass("mini-sidebar"),
            $(".navbar-brand span").show());
        var height = (window.innerHeight > 0 ? window.innerHeight : this.screen.height) - 1;
        (height -= 0) < 1 && (height = 1), height > 0 && $(".page-wrapper").css("min-height", height + "px");
    };
    $(window).ready(set), $(window).on("resize", set), $(".sidebartoggler").on("click", function() {
            $("body").hasClass("mini-sidebar") ? ($("body").trigger("resize"), $("body").removeClass("mini-sidebar"),
                $(".navbar-brand span").show()) : ($("body").trigger("resize"), $("body").addClass("mini-sidebar"),
                $(".navbar-brand span").hide());
        }), $(".nav-toggler").click(function() {
            $("body").toggleClass("show-sidebar"), $(".nav-toggler i").toggleClass("ti-menu"),
                $(".nav-toggler i").addClass("ti-close");
        }), $(".search-box a, .search-box .app-search .srh-btn").on("click", function() {
            $(".app-search").toggle(200);
        }), $(".right-side-toggle").click(function() {
            $(".right-sidebar").slideDown(50), $(".right-sidebar").toggleClass("shw-rside");
        }), $(".floating-labels .form-control").on("focus blur", function(e) {
            $(this).parents(".form-group").toggleClass("focused", "focus" === e.type || this.value.length > 0);
        }).trigger("blur"), $(function() {
            for (var url = window.location, element = $("ul#sidebarnav a").filter(function() {
                    return this.href == url;
                }).addClass("active").parent().addClass("active");;) {
                if (!element.is("li")) break;
                element = element.parent().addClass("in").parent().addClass("active");
            }
        }), $(function() {
            $('[data-toggle="tooltip"]').tooltip();
        }), $(function() {
            $('[data-toggle="popover"]').popover();
        }), $(function() {
            $("#sidebarnav").AdminMenu();
        }), $(".scroll-sidebar, .right-side-panel, .message-center, .right-sidebar").perfectScrollbar(),
        $("body").trigger("resize"), $(".list-task li label").click(function() {
            $(this).toggleClass("task-done");
        }), $('a[data-action="collapse"]').on("click", function(e) {
            e.preventDefault(), $(this).closest(".card").find('[data-action="collapse"] i').toggleClass("ti-minus ti-plus"),
                $(this).closest(".card").children(".card-body").collapse("toggle");
        }), $('a[data-action="expand"]').on("click", function(e) {
            e.preventDefault(), $(this).closest(".card").find('[data-action="expand"] i').toggleClass("mdi-arrow-expand mdi-arrow-compress"),
                $(this).closest(".card").toggleClass("card-fullscreen");
        }), $('a[data-action="close"]').on("click", function() {
            $(this).closest(".card").removeClass().slideUp("fast");
        });

    ! function(t) {
        //alert("Good");
        var e, n, i = "".concat(["text", "password", "email", "url", "tel", "number", "search", "search-md"].map(function(t) { return "input[type=".concat(t, "]") }).join(", "), ", textarea"),
            a = function(t) {
                var e = t.siblings("label, i"),
                    n = t.val().length,
                    i = t.attr("placeholder");
                e["".concat(n || i ? "add" : "remove", "Class")]("active")
            },
            r = function(t) {
                if (t.hasClass("validate")) {
                    var e = t.val(),
                        n = !e.length,
                        i = !t[0].validity.badInput;
                    if (n && i) t.removeClass("valid").removeClass("invalid");
                    else {
                        var a = t.is(":valid"),
                            r = Number(t.attr("length")) || 0;
                        a && (!r || r > e.length) ? t.removeClass("invalid").addClass("valid") : t.removeClass("valid").addClass("invalid")
                    }
                }
            },
            o = function() {
                var e = t(_this);
                if (e.val().length) {
                    var n = t(".hiddendiv"),
                        i = e.css("font-family"),
                        a = e.css("font-size");
                    a && n.css("font-size", a), i && n.css("font-family", i), "off" === e.attr("wrap") && n.css("overflow-wrap", "normal").css("white-space", "pre"), n.text("".concat(e.val(), "\n"));
                    var r = n.html().replace(/\n/g, "<br>");
                    n.html(r), n.css("width", e.is(":visible") ? e.width() : t(window).width() / 2), e.css("height", n.height())
                }
            };
        t(i).each(function(e, n) {
            var i = t(n),
                r = i.siblings("label, i");
            a(i), n.validity.badInput && r.addClass("active")
        }), t(document).on("focus", i, function(e) { t(e.target).siblings("label, i").addClass("active") }), t(document).on("blur", i, function(e) {
            var n = t(e.target),
                i = !n.val(),
                a = !e.target.validity.badInput,
                o = void 0 === n.attr("placeholder");
            i && a && o && n.siblings("label, i").removeClass("active"), r(n)
        }), t(document).on("change", i, function(e) {
            var n = t(e.target);
            a(n), r(n)
        }), t("input[autofocus]").siblings("label, i").addClass("active"), t(document).on("reset", function(e) {
            var n = t(e.target);
            n.is("form") && (n.find(i).removeClass("valid").removeClass("invalid").each(function(e, n) {
                var i = t(n),
                    a = !i.val(),
                    r = !i.attr("placeholder");
                a && r && i.siblings("label, i").removeClass("active")
            }), n.find("select.initialized").each(function(e, n) {
                var i = t(n),
                    a = i.siblings("input.select-dropdown"),
                    r = i.children("[selected]").val();
                i.val(r), a.val(r)
            }))
        }), (n = t(".md-textarea-auto")).length && (e = window.attachEvent ? function(t, e, n) { t.attachEvent("on".concat(e), n) } : function(t, e, n) { t.addEventListener(e, n, !1) }, n.each(function() {
            var t = this;

            function n() { t.style.height = "auto", t.style.height = "".concat(t.scrollHeight, "px") }

            function i() { window.setTimeout(n, 0) }
            e(t, "change", n), e(t, "cut", i), e(t, "paste", i), e(t, "drop", i), e(t, "keydown", i), n()
        }));
        var s = t("body");
        if (!t(".hiddendiv").first().length) {
            var l = t('<div class="hiddendiv common"></div>');
            s.append(l)
        }
        t(".materialize-textarea").each(o), s.on("keyup keydown", ".materialize-textarea", o)
    }(jQuery),
    function(t) { t("body").on("shown.bs.modal", ".modal", function() { t(".modal-backdrop").length || ($modal_dialog = t(this).children(".modal-dialog"), $modal_dialog.hasClass("modal-side") && (t(this).addClass("modal-scrolling"), t("body").addClass("scrollable")), $modal_dialog.hasClass("modal-frame") && (t(this).addClass("modal-content-clickable"), t("body").addClass("scrollable"))) }), t("body").on("hidden.bs.modal", ".modal", function() { t("body").removeClass("scrollable") }) }(jQuery);
    var i, toggler = document.getElementsByClassName("rotate");
    for (i = 0; i < toggler.length; i++) toggler[i].addEventListener("click", function() { this.parentElement.querySelector(".nested").classList.toggle("active"), this.classList.toggle("down") });
    ! function(t, e) { "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = t || self).bsCustomFileInput = e() }(this, function() {
        "use strict";
        var t = { CUSTOMFILE: '.custom-file input[type="file"]', CUSTOMFILELABEL: ".custom-file-label", FORM: "form", INPUT: "input" },
            e = function(e) {
                var n = "",
                    i = e.parentNode.querySelector(t.CUSTOMFILELABEL);
                return i && (n = i.innerHTML), n
            },
            n = function(t) {
                if (t.childNodes.length > 0)
                    for (var e = [].slice.call(t.childNodes), n = 0; n < e.length; n++) { var i = e[n]; if (3 !== i.nodeType) return i }
                return t
            },
            i = function(e) {
                var i = e.bsCustomFileInput.defaultText,
                    a = e.parentNode.querySelector(t.CUSTOMFILELABEL);
                a && (n(a).innerHTML = i)
            },
            a = !!window.File,
            r = function(t) { if (t.hasAttribute("multiple") && a) return [].slice.call(t.files).map(function(t) { return t.name }).join(", "); if (-1 !== t.value.indexOf("fakepath")) { var e = t.value.split("\\"); return e[e.length - 1] } return t.value };

        function o() {
            var e = this.parentNode.querySelector(t.CUSTOMFILELABEL);
            if (e) {
                var a = n(e),
                    o = r(this);
                o.length ? a.innerHTML = o : i(this)
            }
        }

        function s() { for (var e = [].slice.call(this.querySelectorAll(t.INPUT)).filter(function(t) { return !!t.bsCustomFileInput }), n = 0, a = e.length; n < a; n++) i(e[n]) }
        var l = "reset",
            u = "change";
        return {
            init: function(n, i) {
                void 0 === n && (n = t.CUSTOMFILE), void 0 === i && (i = t.FORM);
                for (var a = [].slice.call(document.querySelectorAll(n)), r = [].slice.call(document.querySelectorAll(i)), c = 0, d = a.length; c < d; c++) {
                    var h = a[c];
                    Object.defineProperty(h, "bsCustomFileInput", { value: { defaultText: e(h) }, writable: !0 }), o.call(h), h.addEventListener(u, o)
                }
                for (var f = 0, p = r.length; f < p; f++) r[f].addEventListener(l, s), Object.defineProperty(r[f], "bsCustomFileInput", { value: !0, writable: !0 })
            },
            destroy: function() {
                for (var e = [].slice.call(document.querySelectorAll(t.FORM)).filter(function(t) { return !!t.bsCustomFileInput }), n = [].slice.call(document.querySelectorAll(t.INPUT)).filter(function(t) { return !!t.bsCustomFileInput }), a = 0, r = n.length; a < r; a++) {
                    var c = n[a];
                    i(c), c.bsCustomFileInput = void 0, c.removeEventListener(u, o)
                }
                for (var d = 0, h = e.length; d < h; d++) e[d].removeEventListener(l, s), e[d].bsCustomFileInput = void 0
            }
        }
    }), document.addEventListener("DOMContentLoaded", function() { bsCustomFileInput.init() });
});